{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios'; // axiosをインポート\n\nexport default {\n  data() {\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n    return {\n      text: '',\n      day1: today.toISOString().slice(0, 10),\n      day2: yesterday.toISOString().slice(0, 10),\n      context: null,\n      fields: ['title', 'contents', 'date', 'delete', 'edit'],\n      items: [{\n        date: '2024/01/02',\n        title: 'Dickerson',\n        contents: 'Macdonald'\n      }, {\n        date: 21,\n        title: 'Larsen',\n        contents: 'Shaw'\n      }, {\n        date: 89,\n        title: 'Geneva',\n        contents: 'Wilson'\n      }],\n      isBusy: false,\n      // isBusyプロパティを追加してリアクティブなデータとして定義\n      totalCount: 0,\n      rows: 100,\n      currentPage: 1,\n      errorMessage: '',\n      form: {\n        image: null\n      },\n      url: null,\n      uploadFile: ''\n    };\n  },\n  //インスタンスが生成された後で実行される\n  created() {\n    console.log(\"....\");\n  },\n  methods: {\n    onContext({\n      detail\n    }) {\n      this.context = JSON.stringify(detail, null, 2);\n    },\n    //バリデーションチェック用メソッド\n    formCheck() {\n      const date1 = new Date(this.day1);\n      const date2 = new Date(this.day2);\n      if (date1 < date2) {\n        this.errorMessage = \"最初に選択した日付よりも後の日付を選択することはできません\";\n      } else {\n        this.errorMessage = ''; // エラーメッセージをクリア\n      }\n    },\n    search() {\n      //入力した値を格納する\n      const form = {};\n      //バリデーションチェックのメソッドを呼び出す\n      this.formCheck();\n      // APIを呼び出す\n      //get parameterで呼び出し\n      axios.get(\"http://localhost:8080/bulletin\").then(response => {\n        // レスポンスを処理する（必要に応じて）\n        console.log(response);\n      }).catch(error => {\n        // エラーを処理する（必要に応じて）\n        console.error(error);\n      });\n    },\n    registerArticle() {\n      this.$refs['my-modal'].show();\n    },\n    deleteItem(item) {\n      alert('本当に削除しますか');\n      confirm('記事を削除しました');\n      // 削除のロジックをここに追加\n      console.log(\"Delete item:\", item);\n    },\n    editItem(item) {\n      // 修正のロジックをここに追加\n      console.log(\"Edit item:\", item);\n      this.$refs['edit-modal'].show();\n    },\n    // 画像のプレビューを表示するメソッド\n    preview(event) {\n      const files = event.target.files || event.dataTransfer.files;\n      this.form.image = files[0];\n      this.url = URL.createObjectURL(this.form.image);\n    },\n    deleteImage() {\n      this.form.image = null;\n      this.url = null;\n    },\n    hideModal() {\n      this.form.image = null;\n      this.url = null;\n      this.$refs['my-modal'].hide();\n    },\n    submit(event) {\n      event.preventDefault();\n      const formData = new FormData();\n      formData.append('image', this.form.image);\n      axios.post('/api/form/upload', formData).then(res => {\n        console.log(res);\n        // アップロード処理\n        this.uploadedFile = res.data.filename;\n      }).catch(err => {\n        console.log(err);\n        // エラー処理\n      });\n    },\n    hideEditModal() {\n      this.form.image = null;\n      this.url = null;\n      this.$refs['edit-modal'].hide();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","today","Date","yesterday","setDate","getDate","text","day1","toISOString","slice","day2","context","fields","items","date","title","contents","isBusy","totalCount","rows","currentPage","errorMessage","form","image","url","uploadFile","created","console","log","methods","onContext","detail","JSON","stringify","formCheck","date1","date2","search","get","then","response","catch","error","registerArticle","$refs","show","deleteItem","item","alert","confirm","editItem","preview","event","files","target","dataTransfer","URL","createObjectURL","deleteImage","hideModal","hide","submit","preventDefault","formData","FormData","append","post","res","uploadedFile","filename","err","hideEditModal"],"sources":["src/views/BulletinView.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <p>My page</p>\n        <div>\n            <b-form inline class=\"form-container\">\n                <!-- 題名 -->\n                <div class=\"d-flex align-items-center\">\n                    <p class=\"mb-0 mr-2\">題名</p>\n                    <input id=\"inline-form-input-name\" type=\"text\" placeholder=\"題名を入力して下さい\"\n                        class=\"mr-sm-2 form-control\">\n                </div>\n                <!-- 日付 -->\n                <div class=\"d-flex align-items-center\">\n                    <b-form-datepicker v-model=\"day2\" class=\"mb-2 mr-2\"></b-form-datepicker>\n                    <p class=\"mb-0\">~</p>\n                    <b-form-datepicker v-model=\"day1\" class=\"mb-2 mr-2\"></b-form-datepicker>\n                </div>\n                <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n                <b-button variant=\"primary\" v-on:click=\"search\">検索</b-button>\n            </b-form>\n\n            <h6 class=\"totalCount\">全{{ totalCount }}件</h6>\n        </div>\n\n\n\n        <!-- 新規登録 -->\n        <div class=\"mt-3 d-flex justify-content-end\"><b-button class=\"register\" @click=\"registerArticle\">新規登録</b-button>\n        </div>\n        <!-- 新規登録モーダル -->\n        <b-modal id=\"modal-register\" size=\"xl\" title=\"記事タイトル\">記事中身</b-modal>\n\n        <!-- sticky-header : 스크롤로 테이블의 크기를 한정짓고 싶을 때 사용 ( 필자는 docs에서 해당옵션을 못보고 지나가 css로 삽질을 했음 ) -->\n        <!-- busy : 로딩바로 사용 -->\n        <div class=\"mt-3\">\n            <b-table :sticky-header=\"true\" :items=\"items\" :fields=\"fields\" :busy=\"isBusy\">\n                <template #cell(edit)=\"row\">\n                    <b-button v-b-modal.modal-xl variant=\"primary\" size=\"sm\" @click=\"editItem(row.item)\">修正</b-button>\n                </template>\n                <template #cell(delete)=\"row\">\n                    <b-button variant=\"danger\" size=\"sm\" @click=\"deleteItem(row.item)\">削除</b-button>\n                </template>\n            </b-table>\n        </div>\n        <!-- 修正モーダル -->\n        <b-modal ref=\"edit-modal\" size=\"xl\" hide-footer title=\"記事修正\">\n            <p>題名</p>\n            <b-form-input id=\"inline-form-input-name\" class=\"mb-2 mr-sm-2 mb-sm-0\"\n                placeholder=\"題名を入力して下さい\"></b-form-input>\n            <p>内容</p>\n            <b-form-input id=\"inline-form-input-name\" class=\"mb-2 mr-sm-2 mb-sm-0\"\n                placeholder=\"記事を入力して下さい\"></b-form-input>\n            <!-- ファイルインプット -->\n            <!-- <b-form-group label=\"写真アップロード\" label-cols-sm=\"2\"> -->\n            <p>写真アップロード</p>\n            <b-form-file accept=\"image/jpeg, image/png, image/gif\" id=\"file-default\" @change=\"preview\"></b-form-file>\n            <!-- </b-form-group> -->\n\n            <!-- ファイルプレビュー -->\n            <div v-if=\"url\" class=\"position-relative my-2\">\n                <img :src=\"url\" class=\"border p-2\" style=\"max-width: 100%;\">\n                <!-- Cancel -->\n                <b-button type=\"button\" variant=\"secondary border-light\" class=\"position-absolute\"\n                    style=\"left: 0;top: 0;\" @click=\"deleteImage\">\n                    削除\n                </b-button>\n                UploadedFile: {{ uploadedFile }}\n            </div>\n\n            <div class=\"d-flex justify-content-center\">\n                <b-button class=\"mt-3 mr-2\" variant=\"primary\" @click=\"submit\">修正</b-button>\n                <b-button class=\"mt-3\" variant=\"secondary\" @click=\"hideEditModal\">閉じる</b-button>\n            </div>\n        </b-modal>\n\n        <!-- 新規登録モーダル -->\n        <b-modal ref=\"my-modal\" size=\"xl\" hide-footer title=\"新規記事登録\">\n            <p>題名</p>\n            <b-form-input id=\"inline-form-input-name\" class=\"mb-2 mr-sm-2 mb-sm-0\"\n                placeholder=\"題名を入力して下さい\"></b-form-input>\n            <p>内容</p>\n            <b-form-input id=\"inline-form-input-name\" class=\"mb-2 mr-sm-2 mb-sm-0\"\n                placeholder=\"記事を入力して下さい\"></b-form-input>\n            <!-- ファイルインプット -->\n            <!-- <b-form-group label=\"写真アップロード\" label-cols-sm=\"2\"> -->\n            <p>写真アップロード</p>\n            <b-form-file accept=\"image/jpeg, image/png, image/gif\" id=\"file-default\" @change=\"preview\"></b-form-file>\n            <!-- </b-form-group> -->\n\n            <!-- ファイルプレビュー -->\n            <div v-if=\"url\" class=\"position-relative my-2\">\n                <img :src=\"url\" class=\"border p-2\" style=\"max-width: 100%;\">\n                <!-- Cancel -->\n                <b-button type=\"button\" variant=\"secondary border-light\" class=\"position-absolute\"\n                    style=\"left: 0;top: 0;\" @click=\"deleteImage\">\n                    削除\n                </b-button>\n                UploadedFile: {{ uploadedFile }}\n            </div>\n\n            <div class=\"d-flex justify-content-center\">\n                <b-button class=\"mt-3 mr-2\" variant=\"primary\" @click=\"submit\">登録</b-button>\n                <b-button class=\"mt-3\" variant=\"secondary\" @click=\"hideModal\">閉じる</b-button>\n            </div>\n\n        </b-modal>\n\n\n        <!-- ページネーション -->\n        <div class=\"mt-3\">\n            <h6 class=\"text-center\"></h6>\n            <b-pagination v-model=\"currentPage\" :total-rows=\"rows\" align=\"center\"></b-pagination>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'; // axiosをインポート\n\nexport default {\n    data() {\n        const today = new Date();\n        const yesterday = new Date(today);\n        yesterday.setDate(today.getDate() - 1);\n\n        return {\n            text: '',\n            day1: today.toISOString().slice(0, 10),\n            day2: yesterday.toISOString().slice(0, 10),\n            context: null,\n            fields: ['title', 'contents', 'date', 'delete', 'edit'],\n            items: [\n                { date: '2024/01/02', title: 'Dickerson', contents: 'Macdonald' },\n                { date: 21, title: 'Larsen', contents: 'Shaw' },\n                { date: 89, title: 'Geneva', contents: 'Wilson' }\n            ],\n            isBusy: false, // isBusyプロパティを追加してリアクティブなデータとして定義\n            totalCount: 0,\n            rows: 100,\n            currentPage: 1,\n            errorMessage: '',\n            form: {\n                image: null,\n            },\n            url: null,\n            uploadFile: '',\n        }\n    },\n    //インスタンスが生成された後で実行される\n    created() {\n        console.log(\"....\")\n    },\n\n    methods: {\n        onContext({ detail }) {\n            this.context = JSON.stringify(detail, null, 2);\n        },\n        //バリデーションチェック用メソッド\n        formCheck() {\n            const date1 = new Date(this.day1);\n            const date2 = new Date(this.day2);\n\n            if (date1 < date2) {\n                this.errorMessage = \"最初に選択した日付よりも後の日付を選択することはできません\";\n            } else {\n                this.errorMessage = ''; // エラーメッセージをクリア\n            }\n        },\n        search() {\n            //入力した値を格納する\n            const form = {};\n            //バリデーションチェックのメソッドを呼び出す\n            this.formCheck();\n            // APIを呼び出す\n            //get parameterで呼び出し\n            axios.get(\"http://localhost:8080/bulletin\")\n                .then(response => {\n                    // レスポンスを処理する（必要に応じて）\n                    console.log(response);\n                })\n                .catch(error => {\n                    // エラーを処理する（必要に応じて）\n                    console.error(error);\n                });\n        },\n        registerArticle() {\n            this.$refs['my-modal'].show()\n        },\n        deleteItem(item) {\n            alert('本当に削除しますか')\n            confirm('記事を削除しました')\n            // 削除のロジックをここに追加\n            console.log(\"Delete item:\", item);\n        },\n        editItem(item) {\n            // 修正のロジックをここに追加\n            console.log(\"Edit item:\", item);\n            this.$refs['edit-modal'].show();\n        },\n        // 画像のプレビューを表示するメソッド\n        preview(event) {\n            const files = event.target.files || event.dataTransfer.files\n            this.form.image = files[0]\n            this.url = URL.createObjectURL(this.form.image)\n        },\n        deleteImage() {\n            this.form.image = null\n            this.url = null\n        },\n        hideModal() {\n            this.form.image = null\n            this.url = null\n            this.$refs['my-modal'].hide()\n        },\n        submit(event) {\n            event.preventDefault()\n            const formData = new FormData()\n            formData.append('image', this.form.image)\n            axios.post('/api/form/upload', formData)\n                .then((res) => {\n                    console.log(res)\n                    // アップロード処理\n                    this.uploadedFile = res.data.filename\n                })\n                .catch((err) => {\n                    console.log(err)\n                    // エラー処理\n                })\n\n        },\n        hideEditModal() {\n            this.form.image = null\n            this.url = null\n            this.$refs['edit-modal'].hide()\n        },\n    }\n}\n</script>\n\n<style\n    src=\"/Users/arisaohta/Documents/workspace-spring-tool-suite-4-4.15.1.RELEASE/Bulletin/web/src/views/BulletinView.css\"></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}