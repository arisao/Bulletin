{"ast":null,"code":"import axios from 'axios'; // axiosをインポート\nimport { FormCheckboxPlugin } from 'bootstrap-vue';\nexport default {\n  data() {\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n    return {\n      text: '',\n      day1: today.toISOString().slice(0, 10),\n      day2: yesterday.toISOString().slice(0, 10),\n      context: null,\n      fields: ['title', 'contents', 'date'],\n      items: [{\n        date: '2024/01/02',\n        title: 'Dickerson',\n        contents: 'Macdonald'\n      }, {\n        date: 21,\n        title: 'Larsen',\n        contents: 'Shaw'\n      }, {\n        date: 89,\n        title: 'Geneva',\n        contents: 'Wilson'\n      }],\n      isBusy: false,\n      // isBusyプロパティを追加してリアクティブなデータとして定義\n      totalCount: 0,\n      rows: 100,\n      currentPage: 1\n    };\n  },\n  //インスタンスが生成された後で実行される\n  created() {\n    console.log(\"....\");\n  },\n  methods: {\n    onContext({\n      detail\n    }) {\n      this.context = JSON.stringify(detail, null, 2);\n    },\n    formCheck() {\n      console.log(day1);\n      console.log(day2);\n    },\n    search() {\n      //入力した値を格納する\n      const form = {};\n      //バリデーションチェックのメソッドを呼び出す\n      formCheck();\n      // APIを呼び出す\n      axios.get('/bulletin').then(response => {\n        // レスポンスを処理する（必要に応じて）\n        console.log(response);\n      }).catch(error => {\n        // エラーを処理する（必要に応じて）\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","FormCheckboxPlugin","data","today","Date","yesterday","setDate","getDate","text","day1","toISOString","slice","day2","context","fields","items","date","title","contents","isBusy","totalCount","rows","currentPage","created","console","log","methods","onContext","detail","JSON","stringify","formCheck","search","form","get","then","response","catch","error"],"sources":["src/views/BulletinView.vue"],"sourcesContent":["<template>\n    <div>\n        <p>My page</p>\n        <b-form inline class=\"form-container\">\n            <!-- 題名 -->\n            <label class=\"sr-only\" for=\"inline-form-input-name\">Name</label>\n            <p>題名</p>\n            <b-form-input id=\"inline-form-input-name\" class=\"mb-2 mr-sm-2 mb-sm-0\"\n                placeholder=\"Jane Doe\"></b-form-input>\n            <!-- 日付 -->\n            <label for=\"example-datepicker\" class=\"form\">日付</label>\n            <b-form-datepicker id=\"example-datepicker\" v-model=\"day2\" class=\"mb-2\"></b-form-datepicker>\n            <p>~</p>\n            <b-form-datepicker id=\"example-datepicker\" v-model=\"day1\" class=\"mb-2\"></b-form-datepicker>\n            <b-button variant=\"primary\" v-on:click=\"search\">検索</b-button>\n        </b-form>\n\n        <p>{{ totalCount }}件</p>\n        <!-- sticky-header : 스크롤로 테이블의 크기를 한정짓고 싶을 때 사용 ( 필자는 docs에서 해당옵션을 못보고 지나가 css로 삽질을 했음 ) -->\n        <!-- busy : 로딩바로 사용 -->\n        <b-table :sticky-header=\"true\" :items=\"items\" :fields=\"fields\" :busy=\"isBusy\"></b-table>\n        <!-- ページネーション -->\n        <div class=\"mt-3\">\n            <h6 class=\"text-center\"></h6>\n            <b-pagination v-model=\"currentPage\" :total-rows=\"rows\" align=\"center\"></b-pagination>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'; // axiosをインポート\nimport { FormCheckboxPlugin } from 'bootstrap-vue';\n\nexport default {\n    data() {\n        const today = new Date();\n        const yesterday = new Date(today);\n        yesterday.setDate(today.getDate() - 1);\n\n        return {\n            text: '',\n            day1: today.toISOString().slice(0, 10),\n            day2: yesterday.toISOString().slice(0, 10),\n            context: null,\n            fields: ['title', 'contents', 'date'],\n            items: [\n                { date: '2024/01/02', title: 'Dickerson', contents: 'Macdonald' },\n                { date: 21, title: 'Larsen', contents: 'Shaw' },\n                { date: 89, title: 'Geneva', contents: 'Wilson' }\n            ],\n            isBusy: false, // isBusyプロパティを追加してリアクティブなデータとして定義\n            totalCount: 0,\n            rows: 100,\n            currentPage: 1\n        }\n    },\n    //インスタンスが生成された後で実行される\n    created() {\n        console.log(\"....\")\n    },\n\n    methods: {\n        onContext({ detail }) {\n            this.context = JSON.stringify(detail, null, 2);\n        },\n        formCheck() {\n            console.log(day1);\n            console.log(day2);\n\n\n        },\n        search() {\n            //入力した値を格納する\n            const form = {};\n            //バリデーションチェックのメソッドを呼び出す\n            formCheck();\n            // APIを呼び出す\n            axios.get('/bulletin')\n                .then(response => {\n                    // レスポンスを処理する（必要に応じて）\n                    console.log(response);\n                })\n                .catch(error => {\n                    // エラーを処理する（必要に応じて）\n                    console.error(error);\n                });\n\n\n        }\n    }\n}\n</script>\n\n<style\n    src=\"/Users/arisaohta/Documents/workspace-spring-tool-suite-4-4.15.1.RELEASE/Bulletin/web/src/views/BulletinView.css\"></style>"],"mappings":"AA8BA,OAAAA,KAAA;AACA,SAAAC,kBAAA;AAEA;EACAC,KAAA;IACA,MAAAC,KAAA,OAAAC,IAAA;IACA,MAAAC,SAAA,OAAAD,IAAA,CAAAD,KAAA;IACAE,SAAA,CAAAC,OAAA,CAAAH,KAAA,CAAAI,OAAA;IAEA;MACAC,IAAA;MACAC,IAAA,EAAAN,KAAA,CAAAO,WAAA,GAAAC,KAAA;MACAC,IAAA,EAAAP,SAAA,CAAAK,WAAA,GAAAC,KAAA;MACAE,OAAA;MACAC,MAAA;MACAC,KAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,EACA;MACAC,MAAA;MAAA;MACAC,UAAA;MACAC,IAAA;MACAC,WAAA;IACA;EACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EAEAC,OAAA;IACAC,UAAA;MAAAC;IAAA;MACA,KAAAf,OAAA,GAAAgB,IAAA,CAAAC,SAAA,CAAAF,MAAA;IACA;IACAG,UAAA;MACAP,OAAA,CAAAC,GAAA,CAAAhB,IAAA;MACAe,OAAA,CAAAC,GAAA,CAAAb,IAAA;IAGA;IACAoB,OAAA;MACA;MACA,MAAAC,IAAA;MACA;MACAF,SAAA;MACA;MACA/B,KAAA,CAAAkC,GAAA,cACAC,IAAA,CAAAC,QAAA;QACA;QACAZ,OAAA,CAAAC,GAAA,CAAAW,QAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACA;QACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;MACA;IAGA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}