{"ast":null,"code":"import axios from 'axios'; // axiosをインポート\n\nexport default {\n  data() {\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n    return {\n      text: '',\n      day1: today.toISOString().slice(0, 10),\n      day2: yesterday.toISOString().slice(0, 10),\n      context: null,\n      fields: ['title', 'contents', 'date', 'delete', 'edit'],\n      items: [{\n        date: '2024/01/02',\n        title: 'Dickerson',\n        contents: 'Macdonald'\n      }, {\n        date: 21,\n        title: 'Larsen',\n        contents: 'Shaw'\n      }, {\n        date: 89,\n        title: 'Geneva',\n        contents: 'Wilson'\n      }],\n      isBusy: false,\n      // isBusyプロパティを追加してリアクティブなデータとして定義\n      totalCount: 0,\n      rows: 100,\n      currentPage: 1,\n      errorMessage: ''\n    };\n  },\n  //インスタンスが生成された後で実行される\n  created() {\n    console.log(\"....\");\n  },\n  methods: {\n    onContext({\n      detail\n    }) {\n      this.context = JSON.stringify(detail, null, 2);\n    },\n    //バリデーションチェック用メソッド\n    formCheck() {\n      const date1 = new Date(this.day1);\n      const date2 = new Date(this.day2);\n      if (date1 < date2) {\n        this.errorMessage = \"最初に選択した日付よりも後の日付を選択することはできません\";\n      } else {\n        this.errorMessage = ''; // エラーメッセージをクリア\n      }\n    },\n    search() {\n      //入力した値を格納する\n      const form = {};\n      //バリデーションチェックのメソッドを呼び出す\n      this.formCheck();\n      // APIを呼び出す\n      //get parameterで呼び出し\n      axios.get(\"http://localhost:8080/bulletin\").then(response => {\n        // レスポンスを処理する（必要に応じて）\n        console.log(response);\n      }).catch(error => {\n        // エラーを処理する（必要に応じて）\n        console.error(error);\n      });\n    },\n    registerArticle() {\n      this.$refs['my-modal'].show();\n    },\n    deleteItem(item) {\n      alert('本当に削除しますか');\n      confirm('記事を削除しました');\n      // 削除のロジックをここに追加\n      console.log(\"Delete item:\", item);\n    },\n    editItem(item) {\n      // 修正のロジックをここに追加\n      console.log(\"Edit item:\", item);\n    },\n    // 画像のプレビューを表示するメソッド\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        // FileReaderオブジェクトを作成\n        const reader = new FileReader();\n        // 画像読み込み完了時の処理\n        reader.onload = e => {\n          // 読み込んだ画像を表示するための処理をここに書く\n          // 例: 画像のプレビューを表示するためのimgタグを動的に生成し、DOMに挿入する\n          const imageUrl = e.target.result;\n          // 例: 画像のプレビューを表示するためのimgタグを動的に生成\n          const img = document.createElement('img');\n          img.src = imageUrl;\n          // 画像を表示するための要素にアクセスして画像を追加する\n          const imagePreviewContainer = document.getElementById('image-preview-container');\n          imagePreviewContainer.innerHTML = ''; // すでに表示されている画像があればクリア\n          imagePreviewContainer.appendChild(img);\n        };\n        // 画像ファイルをDataURLとして読み込む\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","today","Date","yesterday","setDate","getDate","text","day1","toISOString","slice","day2","context","fields","items","date","title","contents","isBusy","totalCount","rows","currentPage","errorMessage","created","console","log","methods","onContext","detail","JSON","stringify","formCheck","date1","date2","search","form","get","then","response","catch","error","registerArticle","$refs","show","deleteItem","item","alert","confirm","editItem","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","imageUrl","result","img","document","createElement","src","imagePreviewContainer","getElementById","innerHTML","appendChild","readAsDataURL"],"sources":["src/views/BulletinView.vue"],"sourcesContent":["<template>\n    <div　class=\"container\">\n        <p>My page</p>\n        <div>\n            <b-form inline class=\"form-container\">\n                <!-- 題名 -->\n                <label class=\"sr-only\" for=\"inline-form-input-name\">Name</label>\n                <p>題名</p>\n                <b-form-input id=\"inline-form-input-name\" class=\"mb-2 mr-sm-2 mb-sm-0\"\n                    placeholder=\"題名を入力して下さい\"></b-form-input>\n                <!-- 日付 -->\n                <b-form-datepicker v-model=\"day2\" class=\"mb-2\"></b-form-datepicker>\n                <p>~</p>\n                <b-form-datepicker v-model=\"day1\" class=\"mb-2\"></b-form-datepicker>\n                <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n                <b-button variant=\"primary\" v-on:click=\"search\">検索</b-button>\n            </b-form>\n        </div>\n\n\n        <h6 class=\"totalCount\">{{ totalCount }}件</h6>\n        <!-- 新規登録 -->\n        <div class=\"mt-3\"> <b-button class=\"register\" @click=\"registerArticle\">新規登録</b-button></div>\n        <!-- 新規登録モーダル -->\n        <b-modal id=\"modal-register\" size=\"xl\" title=\"記事タイトル\">記事中身</b-modal>\n\n        <!-- sticky-header : 스크롤로 테이블의 크기를 한정짓고 싶을 때 사용 ( 필자는 docs에서 해당옵션을 못보고 지나가 css로 삽질을 했음 ) -->\n        <!-- busy : 로딩바로 사용 -->\n        <div class=\"mt-3\">\n            <b-table :sticky-header=\"true\" :items=\"items\" :fields=\"fields\" :busy=\"isBusy\">\n                <template #cell(edit)=\"row\">\n                    <b-button v-b-modal.modal-xl variant=\"primary\" size=\"sm\" @click=\"editItem(row.item)\">修正</b-button>\n                </template>\n                <template #cell(delete)=\"row\">\n                    <b-button variant=\"danger\" size=\"sm\" @click=\"deleteItem(row.item)\">削除</b-button>\n                </template>\n            </b-table>\n        </div>\n        <!-- 修正モーダル -->\n        <b-modal id=\"modal-xl\" size=\"xl\" title=\"記事タイトル\">記事中身</b-modal>\n        <!-- 新規登録モーダル -->\n        <b-modal ref=\"my-modal\" ize=\"xl\" hide-footer title=\"新規記事登録\">\n            <p>題名</p>\n            <b-form-input id=\"inline-form-input-name\" class=\"mb-2 mr-sm-2 mb-sm-0\"\n                placeholder=\"題名を入力して下さい\"></b-form-input>\n            <p>内容</p>\n            <b-form-input id=\"inline-form-input-name\" class=\"mb-2 mr-sm-2 mb-sm-0\"\n                placeholder=\"記事を入力して下さい\"></b-form-input>\n            <!-- ファイルインプット -->\n            <b-form-group label=\"写真アップロード\" label-cols-sm=\"2\">\n                <b-form-file accept=\"image/jpeg, image/png, image/gif\" id=\"file-default\"\n                    @change=\"handleFileUpload\"></b-form-file>\n            </b-form-group>\n\n            <!-- ファイルプレビュー -->\n            <div v-if=\"url\" class=\"position-relative my-2\">\n                <img :src=\"url\" class=\"border p-2\" style=\"max-width: 100%;\">\n                <!-- Cancel -->\n                <b-button type=\"button\" variant=\"secondary border-light\" class=\"position-absolute\"\n                    style=\"left: 0;top: 0;\" @click=\"deleteImage\">\n                    削除\n                </b-button>\n            </div>\n\n            <div>\n                <b-button class=\"mt-3 mr-2\" variant=\"outline-warning\" @click=\"toggleModal\">登録</b-button>\n                <b-button class=\"mt-3\" variant=\"outline-danger\" @click=\"hideModal\">閉じる</b-button>\n            </div>\n\n        </b-modal>\n\n\n        <!-- ページネーション -->\n        <div class=\"mt-3\">\n            <h6 class=\"text-center\"></h6>\n            <b-pagination v-model=\"currentPage\" :total-rows=\"rows\" align=\"center\"></b-pagination>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'; // axiosをインポート\n\nexport default {\n    data() {\n        const today = new Date();\n        const yesterday = new Date(today);\n        yesterday.setDate(today.getDate() - 1);\n\n        return {\n            text: '',\n            day1: today.toISOString().slice(0, 10),\n            day2: yesterday.toISOString().slice(0, 10),\n            context: null,\n            fields: ['title', 'contents', 'date', 'delete', 'edit'],\n            items: [\n                { date: '2024/01/02', title: 'Dickerson', contents: 'Macdonald' },\n                { date: 21, title: 'Larsen', contents: 'Shaw' },\n                { date: 89, title: 'Geneva', contents: 'Wilson' }\n            ],\n            isBusy: false, // isBusyプロパティを追加してリアクティブなデータとして定義\n            totalCount: 0,\n            rows: 100,\n            currentPage: 1,\n            errorMessage: ''\n        }\n    },\n    //インスタンスが生成された後で実行される\n    created() {\n        console.log(\"....\")\n    },\n\n    methods: {\n        onContext({ detail }) {\n            this.context = JSON.stringify(detail, null, 2);\n        },\n        //バリデーションチェック用メソッド\n        formCheck() {\n            const date1 = new Date(this.day1);\n            const date2 = new Date(this.day2);\n\n            if (date1 < date2) {\n                this.errorMessage = \"最初に選択した日付よりも後の日付を選択することはできません\";\n            } else {\n                this.errorMessage = ''; // エラーメッセージをクリア\n            }\n        },\n        search() {\n            //入力した値を格納する\n            const form = {};\n            //バリデーションチェックのメソッドを呼び出す\n            this.formCheck();\n            // APIを呼び出す\n            //get parameterで呼び出し\n            axios.get(\"http://localhost:8080/bulletin\")\n                .then(response => {\n                    // レスポンスを処理する（必要に応じて）\n                    console.log(response);\n                })\n                .catch(error => {\n                    // エラーを処理する（必要に応じて）\n                    console.error(error);\n                });\n        },\n        registerArticle() {\n            this.$refs['my-modal'].show()\n        },\n        deleteItem(item) {\n            alert('本当に削除しますか')\n            confirm('記事を削除しました')\n            // 削除のロジックをここに追加\n            console.log(\"Delete item:\", item);\n        },\n        editItem(item) {\n            // 修正のロジックをここに追加\n            console.log(\"Edit item:\", item);\n        },\n        // 画像のプレビューを表示するメソッド\n        handleFileUpload(event) {\n            const file = event.target.files[0];\n            if (file) {\n                // FileReaderオブジェクトを作成\n                const reader = new FileReader();\n                // 画像読み込み完了時の処理\n                reader.onload = (e) => {\n                    // 読み込んだ画像を表示するための処理をここに書く\n                    // 例: 画像のプレビューを表示するためのimgタグを動的に生成し、DOMに挿入する\n                    const imageUrl = e.target.result;\n                    // 例: 画像のプレビューを表示するためのimgタグを動的に生成\n                    const img = document.createElement('img');\n                    img.src = imageUrl;\n                    // 画像を表示するための要素にアクセスして画像を追加する\n                    const imagePreviewContainer = document.getElementById('image-preview-container');\n                    imagePreviewContainer.innerHTML = ''; // すでに表示されている画像があればクリア\n                    imagePreviewContainer.appendChild(img);\n                };\n                // 画像ファイルをDataURLとして読み込む\n                reader.readAsDataURL(file);\n            }\n        },\n    }\n}\n</script>\n\n<style\n    src=\"/Users/arisaohta/Documents/workspace-spring-tool-suite-4-4.15.1.RELEASE/Bulletin/web/src/views/BulletinView.css\"></style>\n"],"mappings":"AAiFA,OAAAA,KAAA;;AAEA;EACAC,KAAA;IACA,MAAAC,KAAA,OAAAC,IAAA;IACA,MAAAC,SAAA,OAAAD,IAAA,CAAAD,KAAA;IACAE,SAAA,CAAAC,OAAA,CAAAH,KAAA,CAAAI,OAAA;IAEA;MACAC,IAAA;MACAC,IAAA,EAAAN,KAAA,CAAAO,WAAA,GAAAC,KAAA;MACAC,IAAA,EAAAP,SAAA,CAAAK,WAAA,GAAAC,KAAA;MACAE,OAAA;MACAC,MAAA;MACAC,KAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,QAAA;MAAA,EACA;MACAC,MAAA;MAAA;MACAC,UAAA;MACAC,IAAA;MACAC,WAAA;MACAC,YAAA;IACA;EACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EAEAC,OAAA;IACAC,UAAA;MAAAC;IAAA;MACA,KAAAhB,OAAA,GAAAiB,IAAA,CAAAC,SAAA,CAAAF,MAAA;IACA;IACA;IACAG,UAAA;MACA,MAAAC,KAAA,OAAA7B,IAAA,MAAAK,IAAA;MACA,MAAAyB,KAAA,OAAA9B,IAAA,MAAAQ,IAAA;MAEA,IAAAqB,KAAA,GAAAC,KAAA;QACA,KAAAX,YAAA;MACA;QACA,KAAAA,YAAA;MACA;IACA;IACAY,OAAA;MACA;MACA,MAAAC,IAAA;MACA;MACA,KAAAJ,SAAA;MACA;MACA;MACA/B,KAAA,CAAAoC,GAAA,mCACAC,IAAA,CAAAC,QAAA;QACA;QACAd,OAAA,CAAAC,GAAA,CAAAa,QAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACA;QACAhB,OAAA,CAAAgB,KAAA,CAAAA,KAAA;MACA;IACA;IACAC,gBAAA;MACA,KAAAC,KAAA,aAAAC,IAAA;IACA;IACAC,WAAAC,IAAA;MACAC,KAAA;MACAC,OAAA;MACA;MACAvB,OAAA,CAAAC,GAAA,iBAAAoB,IAAA;IACA;IACAG,SAAAH,IAAA;MACA;MACArB,OAAA,CAAAC,GAAA,eAAAoB,IAAA;IACA;IACA;IACAI,iBAAAC,KAAA;MACA,MAAAC,IAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,IAAAF,IAAA;QACA;QACA,MAAAG,MAAA,OAAAC,UAAA;QACA;QACAD,MAAA,CAAAE,MAAA,GAAAC,CAAA;UACA;UACA;UACA,MAAAC,QAAA,GAAAD,CAAA,CAAAL,MAAA,CAAAO,MAAA;UACA;UACA,MAAAC,GAAA,GAAAC,QAAA,CAAAC,aAAA;UACAF,GAAA,CAAAG,GAAA,GAAAL,QAAA;UACA;UACA,MAAAM,qBAAA,GAAAH,QAAA,CAAAI,cAAA;UACAD,qBAAA,CAAAE,SAAA;UACAF,qBAAA,CAAAG,WAAA,CAAAP,GAAA;QACA;QACA;QACAN,MAAA,CAAAc,aAAA,CAAAjB,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}